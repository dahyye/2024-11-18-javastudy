package 데이터베이스;

// 메모장 파일 만드는 방법 : sqlplus 관리자권한 -> hr -> happy -> ed (파일명)


/*
 	23page 
 	데이터베이스 / 데이터베이스 시스템
 	--------
 	자바 : 변수(한개만 저장), 배열(같은 데이터 여러개 저장)
 			클래스(다른 데이터 여러개 저장)
 			==================================== 메모리
 			파일(영구적인 저장장치) : 종속적이다 파일 연결이 어렵다
 								보안에 취약하다
 			====================================
 			RDBMS (관계형 데이터베이스) 연결이 쉽다, 보안이 뛰어나다
 			
 	데이터베이스
 	-> 조직(학교, 은행...)에 필요한 정보를 얻고 공유할 수 있게 저장한 데이터
 	1) 유용한 데이터의 집합
 	2) 검색에 용이하게 데이터를 저장한것
 	3) 검색, 수정, 삭제, 추가도 가능
 	  -----------------------
 	  SQL => DML(데이터 조작언어)
 	  		  검색 : SELECT
 	  		  수정 : UPDATE
 	  		  삭제 : DELETE
 	  		  추가 : INSER 
 	  		  ------------ 문자열 형식으로 만들어져 있다
 	  -> 데이터베이스는 CRUD가 가능하게 만들어져 있다
 	  
 	 
 	 25page
 	 데이터 베이스의 개념 / 특징
 	 *개념
 	 1. 통합데이터 
 	 	사이트 개발에 필요한 모든 데이터를 저장하고 있다
 	 	중복된 데이터 허용을 않는다(키의 종류 -> 정규화)
 	 	검색의 효율성을 위해 최소한의 중복을 허용한다 -> 통합
 	 	
 	 2. 저장 데이터
 	 	이미지형식으로 저장
 	 	절대로 지워지지 않는다 / 필요시에 삭제는 가능
 	 	오라클에 저장되는 것이 아니고 하드 디스크에 저장
 	 	----> 하드디스크를 연결해서 검색, 추가..
 	 			(데이터베이스 시스템)
 	 			
 	 3. 운영 데이터
 	 	관리자 -> DBA
 	 	
 	 4. 공용 데이터
 	    데이터를 공유할 목적
 			
 	
 	*특징
 	1. 실시간 접근성
 	2. 계속적인 변화 -> 변경이 되면 모든 사람이 공유
 		(게시판, 댓글, 예약...)
 	3. 동시 공유 : 같은 데이터 공유
	4. 자바 : 주소를 이용한 참조 / 내용에 의한 참조(실제 저장된 데이터)
	
	===============================================================================
	
	27page 
	데이터베이스 시스템
					(오라클:응용프로그램과 실제 데이터를 연결하는 역할)
					SQL(Structured Query Language)
	Application   =====> 	DBMS(Database Management System)
				  <=====	
 					결과값
 					  |
 					  | -> read/write
 					  |
 					data file -> 하드 디스크 -> 실제 데이터가 저장된 위치
 					
 	=> 필요한 모든 사람이 공유가 가능
 		-> 211.238.142.124 (강의실공유데이터서버)
 		-> 조별로 필요한 데이터를 모아서 개발
 		
 	데이터베이스 시스템의 구성요소
 	--------------
 	 데이터를 모아서 통합 후 서로 공유가 가능하게 만든다
 	 DBMS : 데이터를 관리하는 소프트웨어
 	 		ROM에 저장(절대 지워지지 않는다)
 	 		-> 윈도우 부팅과 동시에 서버가 구동
 	 		-> 사용자와 데이터베이스를 연결해주는 역할
 	 		   ---------------------
 	 		   소형 : SQLite -> 핸드폰 / 브라우저 내장
 	 		   중형 : Oracle / MySQL / MSSQL / MariaDB..
 	 		   대용량 : DB2 / 사이베이스...
 	 		   NoSQL : SQL문장없이 접근 
 			   --(Not Only)
 			   		몽고디비 / 카산드라 
 			   		검색엔진
 			   		------> ElasticSearch
 	---------------------------------------------------
 	데이터베이스
 		파일시스템
 		 	데이터를 변경 / 삭제가 어렵다
 		 	다른 파일 연결이 어렵다 
 		 	InputStream / OutputStream
 		RDBMS : 관계형(Relational)
 			파일 -> 테이블
 			JOIN / SubQuery
 			INSERT / UPDATE / DELETE
 			중복의 최소화 / 일관성/ 독립성 / 관리 기능 제공
 			프로그램 개발시에 용이하다
 			-----------
 			 jdbc-> orm(mybatis, jpa) => 실무개발
 	---------------------------------------------------  
 	데이터베이스 모델 : 데이터가 저장되는 기법 ( 객체(class)와 거의 비슷하다 )
 	
 	
 	43page 
 	파일 시스템 / DBMS 비교
 	-------------------
 	발전과정
 	 파일 시스템 => 데이터베이스 시스템 -> 웹 데이터베이스 시스템
 	  							   분산 데이터베이스 시스템 
 	  							   -------------------
 	  							   MSA 
 	  							   행정 자치부 -> 데이터 통합
 
 
 	*bit -> byte -> word -> record -> table
 	--------------------------------------------------
 		구분			파일시스템 			DBMS
 	--------------------------------------------------
 	 데이터정의		파일					table(자바로 생각하면 파일에 해당하는 부분)
 	 				1|영화명....		
 	 				.txt
 	
 	--------------------------------------------------
 	저장위치			파일					데이터베이스
 	--------------------------------------------------
 	접근방식 			응용프로그램			SQL -> 응용프로그램에서도 SQL 네트워크를 이용해서 접근가능
 					프로그램 언어					: jdbc
 					(java, c,c++..)
 					-> io api를 제공
 	--------------------------------------------------
 	**웹 개발
 	  HTML/CSS/JavaScript -> 브라우저에서 화면UI와 관련
 	  ====> 오라클 연결이 불가능(제외 : NodeJS)
 	  		---------
 	  		프로그램언어 : 오라클 연동 = 브라우저 연동
 	  		-------- java(spring), c#(asp.net), python(djanago)
 
 	
 	
 	
 	--------------------------------------------------
 	CPU / 주기억장치 		적음				ROM에 저장
 						보조기억장치(RAM)	사용빈도
 										SQL=>java.sql
 	--------------------------------------------------
 	
 	44page
 	DBMS의 장점 
 		데이터 중복의 최소화 : 정규화
	 		1. 데이터의 원자성
	 			취미 -> 등산, 낚시, 여행 => 따로 저장가능
	 		
	 		2. 중복된 데이터를 없앤다
	 		3. 매핑테이블
	 	
	 	테이블간의 관계도 : ERD
	 	일관성 : 테이블안에는 관련된 데이터만 저장해서 사용해야한다
 		독립성 / 관리기능을 제공 / 프로그램 개발시 용이
 		
 
 	45page
 	데이터베이스 시스템
 	
 	사용자 : 일반사용자						응용프로그래머 		SQL사용자 		DBA
 			  |								|				|			|
 			응용프로그램 화면			응용프로그램 개발		  SQL을 잘하는		설계
 			(브라우저/윈도우)			(JDBC/HTML)				개발자
 											|				|
 											----------------- DDL / DCL
 													|
 												DQL/DML
 											
 	
 	46page
 	데이터베이스 언어(********)
 	=> SQL(구조화된 질의 언어)
 	   ---
 	   DQL / DML / DDL / DCL / TCL
 	   			   ----------
 	   			   	DBA
 	
 	SQL의 단점 : 비절차적언어
 				-> 오류가 있어도 계속 수행
 				
 	1. DQL : 데이터 검색 언어
 			-> SELECT
 	2. DML : 데이터 조작언어 							
 			-> INSERT / UPDATE / DELETE
 	3. DDL : 데이터 정의언어
 			-> CREATE : 생성(table, view, sequence, index, function, procedure, trigeer)
 			   ALTER : 변경(수정, 추가, 삭제가 가능)
 			   DROP : 전체삭제
 			   TRUNCATE : 데이터만 자르기
 			   RENAME : 테이블명/컬럼명 변경
 			   
 	4. DCL : 제어 언어 : 일반 계정으로는 사용이 불가능
 			-> system/sysdba
 			   GRANT : 권한부여
 			   REVOKE : 권한해제
 	
 	5. TCL : 트랜잭션 제어언어
 			-> COMMIT : 정상저장
 			   ROLLBACK : 취소
 	**오라클에서 저장->COMMIT이 없으면 저장이 안됨
 	**자바는 AutoCommit
 	**오라클은 대소문자 구분이 없지만 실제 저장된 데이터는 대소문자를 구분해야한다
 		-> 약속사항 : 키워드는 대문자로 사용한다(ex. SELECT , FROM, WHERE)
 
 	SELECT ename,job FROM emp WHERE ename='KING';
 	
 	=> emp라는 테이블에서 ename, job데이터를 검색하는데 ename이 'KING'인 데이터를 찾아라
 	
 	====================================================================================
 	
 	47page
 	데이터베이스 사용자
 	 일반사용자(user) ============> 언어 / SQL (x)
 	 응용프로그래머(웹개발) ------------> 언어 / SQL (약간)
										=> 필요한 데이터 읽기 / 쓰기
	데이터베이스 관리자(DBA)----------->언어(약간) / SQL
										=> admin -> 백업 / 설계
										
 
 	52page
 	데이터 모델 => 관계데이터모델 (속성값을 이용)
 	
 	54page 
 	데이터베이스 구조
 		스키마 : 데이터베이스 구조와 제약조건에 해당되는 전반적인 명세를 기술
 			1. 외부 스키마 : 사용자 관점 => 요구사항
 						  제목 / 포스터 / 개봉...
 			2. 내부스키마 : 어떤 데이터로 저장할지 -> 프로그래머
 						  제목->문자열, 개봉->날짜형, 평점->실수형...
						 => 연결 / 키의 종류

 			3. 물리스키마 : 실제로 저장 => 크기설정
 						  VARCHAR2(500), DATE, NUMVER(2,1)...
 
 		용어
 			1. 테이블 : 데이터를 저장하는 공간 
 			2. 컬럼 : 클래스 멤버변수
 			3. 개체 : 레코드 / 류플 --> ROW
 			
 	
 	=======================================================================================
 	
	Chapter2장
	69page 
	관계 데이터 모델
	
	릴레이션(테이블) : 테이터를 저장하는 공간 -> 같은 데이터베이스에서는 유일하다
		1. 이차원 구조
 		
	 		<학생> 릴레이션
	 		
	 		-----------------------------
	 		 id			name		sex		=> 컬럼(데이터구분역할), 릴레이션스키마
	 		-----------------------------
	 		hong		홍길동		남자 =>한 줄 -> 튜플, 행(row), 파일구조의 레코드와 같은 의미
	 											튜플은 순서가 없다(빈 공백에 저장) => 정렬을 해서 값을 가져와야해
	 		-----------------------------
	 		shim		심청이		여자
	 		-----------------------------
	 		park		박문수		남자
	 		
	 		튜플의 수 : 카디널리티 : 3개
	 		도메인 : 홍길동, 심청이, 박문수.. 하나의 속성이 취할 수 있는 같은 타입의 원자값들의 집합	
	 		속성 : id, name, sex -> 열(column) / 자바의 멤버변수(데이터필드)
 			
 		*속성(컬럼)
 		속성값은 1개만 저장이 가능하다
 			-> 속성명은 중복이 안된다
 		속성은 순서가 없다
 		
 		2. 스키마( 속성의 이름으로 되어 있는 부분을 말함 )
 			emp : 사원정보를 가지고 있는 연습용테이블
 			
 			-------------------------------------------
 			 empno : 사번 -> 중복없는데이터
 			 		 한명의 사원 정보를 읽기
 			 		 숫자(정수)
 			-------------------------------------------
 			 ename : 사원이름
 			-------------------------------------------
 			 job : 직원
 			 		문자열
 			-------------------------------------------
 			 mgr : 사수의 사번 
 			 		정수
 			-------------------------------------------
 			hiredate : 입사일 
 						날짜형(문자형식으로 저장)
 			-------------------------------------------
 			sal : 급여 
 					정수형
 			-------------------------------------------
 			comm : 성과급
 					정수형
 			-------------------------------------------
 			deptno : 부서번호 
 						정수형
 			
 			-------------------------------------------
 			
 			emp(empno:ename:job:mgr...)
 			
 			
 			
 		3. 키의 종류
 			기본기(PRIMARY KET)
 				중복이 없는 데이터, 튜플 구분자
 				일반적으로는 숫자로 되어 있지만 ID는 문자로 되어있음(ID중복체크필요)
 				모든 테이블은 기본키를 1개이상 가지고 있다
 				무결성 조건(원하지 않는데 수정, 삭제되는 이상현상이 없다)
 				
 			외래키(FOREIGN KEY)
 				다른 테이블과 연결 시 사용
 			
 			후보키(UNIQUE)
 				기본키를 잃어 버린 경우 사용
 			    EX. 이메일 / 전화번호
 			    
 			    
 -------------------------------------------------------------------------------------------------
 	
 	90page
 	관계대수(연산개념)
	 	
	 	순수관계연산
	 		셀렉션 : SELECT 문장과 관련되어 있는데 조건이 걸려있다 ( 상세보기, 검색 )
	 		 	SELECT ename,job FROM emp
	 		 	WHERE ename='KING'
	 		
	 		프로젝션 : 원하는 컬럼만 선택 ( 목록출력 )
	 			SELECT ename,job FROM emp
	 		조인
	 		 	INNER JOIN
	 		 		EQUI JOIN
	 		 		NON_EQUI_JOIN
	 		 	OUTER JOIN
	 		 		LEFT OUTER JOIN
	 		 		RIGHT OUTER JOIN
	 		 		FULL OUTER JOIN
	 			
	 		디비전
	 		개명 : RENAME oldname To newname
	 		
	 	일반집합연산 A(1,2,3,4) B(3,4,5,6) 
	 		합집합 
	 			A UNION ALL B
	 			=> 1,2,3,4,3,4,5,6
	 			A UNION B
	 			=> 1,2,3,4,5,6
	 		교집합
	 			A INTERSECT B  ==> 응용 ==> INNER JOIN
	 			=> 3,4 
	 		차집합
	 			A MINUS B  ==> 응용 ==> Left OuterJOIN
	 			=>1,2
	 			B MINUS A  ==> 응용 ==> Right OuterJOIN
	 			=> 5,6
	 		
	 	
 ============================================================================
 
 	Chapter3 
 	SQL
 	
 	SQLPLUS 에서 오라클 연결 -> conn hr/happy  ==> id/pwd
 				명령어 작성 -> ed 파일이름 --> 메모장을 이용해서 작성가능
 				
 	SQL은 문자열 형식으로 만들어져 있다 ( 대부분 암기 )
 		
 		1. DQL : 데이터 검색언어
 			SELECT 
 			-> 연산자
 			-> 내장 함수
 			-> JOIN
 			-> SubQuery
 		
 		2. DML : 데이터 조작언어
 		 	INSERT 
 		 	UPDATE
 		 	DELETE
 		 	
 		3. DDL : 데이터 정의언어
 	 		CREATE
 	 		DROP
 	 		ALTER
 	 		TRUNCATE
 	 		RENAME
 	 		
 		4. DCL : 데이터 제어언어
 			GRANT
 			REVOKE
 			 		
 		5. TCL : 트랜잭션 제어언어(일괄처리)
 			COMMIT
 			ROLLBACK
 	
 	SQL 작성시 주의점
 		1. 문장이 종료가 되면 반듣시 ;를 사용한다
 		2. 문자열 -> ' ' (""는 인용부호로만 사용)
 			'KING', 날자-> 'YY/MM/DD'
 		3.SQL문장은 대소문자구분을 하지 않는데
 			약속사항 : 키워드는 대분자 사용
 					 실제 저장된 데이터는 대소문자를 구분한다
 		4. 문자열 결합이 가능
 			+가 아닌 ||를 사용해야 한ㄷ
 			EX. 'a'+'b' (x) 'a'||'b'
 		5. 입력이 가능하다
 			&sabun -> Scanner역할
 		6. 원하는 컬럼은 ,로 구분해서 값을 가지고 온다
 			공백이 있으면 안된다
 			ename,job ...
 		7. 컬럼은 별칭을 사용할 수 있다
 			empno "사번" ename "이름"
 		8. 중복없는 데이터를 읽을 때
 			DISTINCT 컬럼명
 		9. 키워드 뒤에는 반드시 공백
 		10. 순서
 			SELECT --3
 			FROM --1
 			WHERE --2
 			    
 	
 	SELECT 검색
 		형식)
 			SELECT*|column1,column2,column3(column_list)
 			FROM table_name
 			[
 				WHERE 조건문 => 셀렉션 (자바로 생각하면 if문)
 				GROUP BY 그룹컬럼 => 그룹별로 통계(부서별, 직위별, 입사일)
 				HAVING 그룹 조건 => GROUP BY가 있는 경우에만 사용이가능
 				ORDER BY 컬럼명 => 정렬
 								ASC(생략이 가능), DESC
 			]
 			    
 	
 	-사원테이블에 있는 사원의 모든 정보를 출력
 	SELECT*
	FROM emp;
 			    
 	-사원의 정보중에 사번, 이름, 직위, 입사일을 출력
 	SELECT empno,ename,job,hiredate
	FROM emp;	
	
	-사원테이블에서 사원의 정보중에 이름(ename), 직위(job), 급여(sal)을 가져와	    
	SELECT ename,job,sal
	FROM emp;	    
	
	-별칭 ==> 그냥 저장하면 한글이 깨지기 때문에 파일 저장할 때 다른이름저장을 누르고 인코디을 'ANSI'로 변경해줘야함
	SELECT ename "이름",job "직위",sal "급여"
	FROM emp;
	
	**SQL Plus에서 실행할 때 결과값이 안나오고 숫자가 나오면 ;을 안찍었을 수 있다
	**자바에서 SQL전송시에 자동으로 ;가 추가되기 때문에 자바에서 SQL문장을 쓸 때는 ;를 사용하면 오류발생
	
	-중복없는 데이터 가져올 때
	SELECT DISTINCT job 
	FROM emp;
	
	
	SQL Plus에서 사이즈 변경
	set pagesize 20 -> 페이지사이즈(세로)를 바꿀 수 있다
	set linesize 250  -> 줄사이즈(가로)를 바꿀 수 있다
		    
	------------------------------------------------------------------------------------------
	
	1. DESC table명으로 컬럼 확인
		DESC : 특정 테이블에 어떤 칼럼이 있는지 구조가 무엇인지 조회하는 명령어
				테이블에 저장된 순서를 보여준다
	2. 데이터형 확인
		문자열 : CHAR VARCHAR2(가변형), CLOB
		숫자 : NUMBER(8)-정수형, NUMBER(2,1)-실수형
		날짜 : DATE, TIMESTAMP
		기타(사진, 동영상) : BLOB, BFILE
	3. 테이블명 확인
					
		테이블명 : book
	
		BOOKID		NUMBER(2)		=> 숫자 2자리까지 사용
	 	BOOKNAME	VARCHAR2(40)	=> 문자열 영문/숫자 40자
	 	PUBLISHER	VARCHAR2(40)		한글(글자당 3byte)일 땐 13자
	 	PRICE		NUMBER(8)		=> 숫자 8자리까지 사용
	 			  **DATE 			=> 날짜형
		   
		    
	146~148page	    
 	
 	-- 모든 도서의 이름과  가격을 검색
	SELECT bookname,price 
	FROM book;
	
	SELECT price,bookname
	FROM book;
	//순서상관없다
	
	
	
	
 	--모든 도서의 도서번호, 도서이름, 출판사, 가격을 출력

	SELECT bookid,bookname,publisher,price 
	FROM book;
	
	SELECT *
	FROM book;
	
	//*을 사용하면 순서가 테이블 생성할 때 지정된 순서
	
	--테이블에 있는 모든 출판사를 출력
	SELECT publisher
	FROM book;
	
	--중복제거
	SELECT DISTINCT publisher 
	FROM book;
		    
 
 			 
 ----------------------------------------------------------------------
 
 	DQL
 	
 	emp테이블
 	empno 사원번호 => 기본키(중복이 없다)
 	ename : 이름 			문자열
 	job : 직원			문자열
 	mgr : 사수 번호		정수
 	hiredate : 입사일		날짜형
 	sal : 급여			정수-설정은실수형
 	comm : 성과급			정수
 	depno : 부서번호		정수(depl테이블과 JOIN하기 위한)
 	
 	
 	--문자열결합 연습
	-- KING은 직위가 xxxx이다
		출력결과 예시 ) KING은 직위가 PRESIDENT이다
		
		SELECT ename||'은 직위가 '||job||'이다'
		FROM emp;
		//컬럼은 변수처럼 사용한다
 
 ----------------------------------------------------------------------
 
 	149page
 	연산자
 	*null 값은 연산처리가 안된다 => 결과값이 다 null
 	 1. 산술 연산자 : SELECT 뒤에서 사용
 	 			   +,-,*,/ -> %(mod함수)
 	 			   순수하게 숫자만 처리
 	 			   정수/정수 -> 실수
 	 			   WHERE에서는 사용하지 않는다
				   가로단위는 통계가 안된다
				   
 	 2. 비교 연산자 : WHERE문장 뒤에 사용한다
 	 				문자열/ 날짜/숫자 => 전체 비교가 가능하다
 	 				
 	 			   (오라클 = , 자바 == , 자바스크립트 ===  다 다르기 때문에 잘 외워야한다)
 	 			   같다 		=
 	 			   같지않다	!=, <>(권장사항), ^=
 	 			   크다		>
 	 			   작다		<
 	 			   크거나같다	>=
 	 			   작거나 같다 <=
 	 			   
 	 			   
 	 			  
 	 	형식) 
 	 			SELECT ~
 	 			FROM 테이블명
 	 			WHERE 조건문 ==> 조건문이 true일 때 실행
 	 			  
 	 3. 논리 연산지 : 
 	 			   직렬연산자 => AND ( & -> 입력) , 범위나 기간을 포함할 때
 	 			   병렬연산자 => OR  (|| -> 문자열결합) , 범위나 기간 밖에 있을 때 사용
 	 			
 	 			조건 AND 조건     조건 OR 조건
 	 
 	 4. 대입 연산자
 	 
 	---------------
 	 5. IN 
 	 		OR가 여러개일 때 사용
 	 		WHERE ename IN('KING', 'CLARK','ALLEN','WARD','FORD','SCOTT');
 	 		
 	 6. NOT
 	 		부정연산자
 	 		WHERE job NOT IN('MANAGER','CLERK');
 	 		//MANAGER 이 아니고 또는 CLERK이 아닌 경우를 출력할 때
 	 7. NULL
 	 		IS NULL => null인 경우
 	 		WHERE mgr IS NULL;
 	 		
 	 		IS NOT NULL => null이 아닌 경우
 	 		WHERE mgr IS NOT NULL;
 	 		//0은 NULL값이 아니다
 	 		//브라우저에서 null값이 경우에 'null'을 출력 
 	 8. BETWEEN~AND
 	 		A에서 B사이의 데이터를 가져올 때 사용
 	 		WHERE hiredate BETWEEN start AND end  
 	 		조건 A, B를 모두 포함한다
 	 		hiredate BETWEEN A AND B -> hiredate>=A AND hiredate<=B
 	 9. LIKE
 	 		--------------------------------
 	 		자바에서 검색할 때
 	 			startsWith : 시작하는 문자열이 같을 때
 	 			endsWith : 끝나는 문자열이 같을 때
 	 			contains : 포함
 	 		--------------------------------
 	 		오라클에서 검색할 때(글자수를 모르는 경우)
	 	 		WHERE 컬럼명 LIKE '문자열%' 문자열로 시작하는 문장을 찾는다
	 	 		WHERE 컬럼명 LIKE '%문자열' 문자열로 끝나는 문장을 찾는다
	 	 		**%는 문자열의 갯수를 모르는 경우 사용
	 	 		WHERE 컬럼명 LIKE '%문자열%' 문자열을 포함하는 모든 문장을 찾는다
 	 		오라클에서 검색할 때(글자수를 알 때)
 	 			5글자 중 가운데가 o -> '__o__'
 	 			4글자 중 2번째가 k -> '_k__'
 	 		
 	 
 	-------------------------------------------------------------------------------
 	
 	 	오라클에 데이터를 첨부 => 공유를 한다는 뜻(모든 사용자가 동일하게 본다)
 	 	공유된 데이터를 실시간으로 수정/삭제/추가할 수 있다
 	 	
 	 	SQL문장 형식
 	 	=> SELECT 
 	 		형식, 순서 중요
 	 		조건처리(연산자)
 	 		내장함수
 	 		JOIN형식 / SubQuery 	
 	 	=> UPDATE / DELETE / INSERT
 	 	------------------------------> DML(기본)
 	 	Table / View / Index / Procedure / Function / Trigger / Sequence
 	 	----------------------------------------------------------------->
 	 	 
 	 	Procedure / Function / Trigger => PL-SQL (기능을 만드는 SQL)
 	 
 	 
 	 
 	 
 	 
 	 
 */			

public class 데이터베이스_250102 {
	
}
